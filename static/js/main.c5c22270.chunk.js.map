{"version":3,"sources":["logo.svg","components/Bingo.js","components/BingoColumn.js","components/BingoList.js","components/ResetButton.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Bingo","props","SelectNumber","cookies","id","row","board","JSON","parse","selected","set","path","state","select","this","free","className","onClick","num","React","Component","withCookies","getRandomInt","minn","maxx","min","Math","ceil","max","floor","random","BingoColumn","UpdateCookie","numbers","initialized","GenerateNumber","newnumbers","i","includes","console","log","letter","sel","BingoList","ResetButton","App","Initialize","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","CookiesProvider","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"iJAAAA,EAAOC,QAAU,IAA0B,kC,wMCMrCC,E,kDAMF,WAAYC,GAAO,IAAD,8BACd,cAAMA,IAMVC,aAAe,WACd,IACWC,EAAY,EAAKF,MAAjBE,QADZ,EAEwB,EAAKF,MAAjBG,EAFZ,EAEYA,GAAIC,EAFhB,EAEgBA,IACRC,EAAQC,KAAKC,MAAML,EAAQA,QAAQG,OAEvCA,EAAMG,SAASL,GAAIC,IAAQC,EAAMG,SAASL,GAAIC,GAC9CF,EAAQO,IAAI,QAASJ,EAAO,CAAEK,KAAM,OAZpC,EAAKC,MAAQ,CACTC,QAAQ,GAHE,E,qDAkBR,IACEV,EAAYW,KAAKb,MAAjBE,QADH,EAEeW,KAAKb,MAAjBG,EAFH,EAEGA,GAAIC,EAFP,EAEOA,IACRC,EAAQC,KAAKC,MAAML,EAAQA,QAAQG,OAEvC,OAAwB,IAApBQ,KAAKb,MAAMc,KAGX,yBAAKC,UAAU,yDAAf,MAKIV,EAAMG,SAASL,GAAIC,GAEvB,yBAAKY,QAASH,KAAKZ,aAAcc,UAAU,yDACxCF,KAAKb,MAAMiB,KAMd,yBAAKD,QAASH,KAAKZ,aAAcc,UAAU,yDACvCF,KAAKb,MAAMiB,S,GA/CPC,IAAMC,WAwDXC,cAAarB,GCzD5B,SAASsB,EAAaC,EAAMC,GACxB,IAAIC,EAAMC,KAAKC,KAAKJ,GAChBK,EAAMF,KAAKG,MAAML,GACrB,OAAOE,KAAKG,MAAMH,KAAKI,UAAYF,EAAMH,IAAQA,E,IAK/CM,E,kDAKF,WAAY9B,GAAQ,IAAD,8BACf,cAAMA,IAKV+B,aAAe,SAACC,EAAS3B,EAAOF,GAAQ,IAC5BD,EAAY,EAAKF,MAAjBE,QAERG,EAAM2B,QAAQ7B,GAAM6B,EACpB3B,EAAMG,SAASL,GAAM,EAAC,GAAO,GAAO,GAAO,GAAO,GAClDE,EAAM4B,YAAY9B,IAAM,EACxBD,EAAQO,IAAI,QAASJ,EAAO,CAAEK,KAAM,OAZrB,EA4BnBwB,eAAiB,WAAO,IACZhC,EAAY,EAAKF,MAAjBE,QACAC,EAAO,EAAKH,MAAZG,GACJE,EAAQC,KAAKC,MAAML,EAAQA,QAAQG,OAEvC,IAAKA,EAAM4B,YAAY9B,GAAK,CAKxB,IAHA,IAAIgC,EAAa,GACbC,EAAI,EAEDA,GAAK,GAAG,CAEX,IAAInB,EAAMI,EAAa,EAAKrB,MAAMwB,IAAK,EAAKxB,MAAM2B,KACtC,IAARV,IACAA,EAAM,GAGLkB,EAAWE,SAASpB,KACrBkB,EAAWC,GAAKnB,EAChBmB,GAAQ,GAKhB,EAAKL,aAAaI,EAAY9B,EAAOF,KAjDzC,EAAK+B,iBAHU,E,oEAeM,IACbhC,EAAYW,KAAKb,MAAjBE,QACAC,EAAOU,KAAKb,MAAZG,GAQR,OAPYG,KAAKC,MAAML,EAAQA,QAAQG,OAE7B4B,YAAY9B,IAElBU,KAAKqB,kBAGF,I,+BA+BD,IAEEhC,EAAYW,KAAKb,MAAjBE,QACAC,EAAOU,KAAKb,MAAZG,GACJE,EAAQC,KAAKC,MAAML,EAAQA,QAAQG,OAIvC,OAFAiC,QAAQC,IAAI,gBACZD,QAAQC,IAAIlC,GAGR,yBAAKU,UAAU,WACX,4BAAKF,KAAKb,MAAMwC,QAChB,kBAAC,EAAD,CAAOrC,GAAIA,EAAIC,IAAK,IAAKa,IAAKZ,EAAM2B,QAAQ7B,GAAI,GAAIsC,IAAKpC,EAAMG,SAASL,GAAI,GAAIW,MAAM,IAEtF,kBAAC,EAAD,CAAOX,GAAIA,EAAIC,IAAK,IAAKa,IAAKZ,EAAM2B,QAAQ7B,GAAI,GAAIsC,IAAKpC,EAAMG,SAASL,GAAI,GAAIW,MAAM,IACtF,kBAAC,EAAD,CAAOX,GAAIA,EAAIC,IAAK,IAAKa,IAAKZ,EAAM2B,QAAQ7B,GAAI,GAAIsC,IAAKpC,EAAMG,SAASL,GAAI,GAAIW,KAAMD,KAAKb,MAAMc,OACjG,kBAAC,EAAD,CAAOX,GAAIA,EAAIC,IAAK,IAAKa,IAAKZ,EAAM2B,QAAQ7B,GAAI,GAAIsC,IAAKpC,EAAMG,SAASL,GAAI,GAAIW,MAAM,IACtF,kBAAC,EAAD,CAAOX,GAAIA,EAAIC,IAAK,IAAKa,IAAKZ,EAAM2B,QAAQ7B,GAAI,GAAIsC,IAAKpC,EAAMG,SAASL,GAAI,GAAIW,MAAM,S,GA9E5EI,IAAMC,WAmFjBC,cAAYU,GC5EZY,EAdG,WAEd,OACI,6BACI,kBAAC,EAAD,CAAavC,GAAI,IAAKqC,OAAQ,IAAKhB,IAAK,IAAKG,IAAK,KAAMb,MAAM,IAC9D,kBAAC,EAAD,CAAaX,GAAI,IAAMqC,OAAQ,IAAMhB,IAAK,KAAMG,IAAK,KAAMb,MAAM,IACjE,kBAAC,EAAD,CAAaX,GAAI,IAAMqC,OAAQ,IAAKhB,IAAK,KAAMG,IAAK,KAAMb,MAAM,IAChE,kBAAC,EAAD,CAAaX,GAAI,IAAMqC,OAAQ,IAAMhB,IAAK,KAAMG,IAAK,KAAMb,MAAM,IACjE,kBAAC,EAAD,CAAaX,GAAI,IAAMqC,OAAQ,IAAIhB,IAAK,KAAMG,IAAK,KAAMb,MAAM,MCLrE6B,E,kDAMF,WAAY3C,GAAQ,uCACVA,G,qDAIN,OACI,6BAEI,4BAAQe,UAAU,mDAClBC,QAASH,KAAKb,MAAMgB,SADpB,iB,GAdUE,IAAMC,WAqBjBC,cAAYuB,G,ICTpBC,E,kDAMP,WAAY5C,GAAO,IAAD,8BACd,cAAMA,IAKP6C,WAAa,WAAO,IACX3C,EAAY,EAAKF,MAAjBE,QACHA,EAAQA,QAAQ+B,aACnB/B,EAAQO,IAAI,eAAe,EAAO,CAAEC,KAAM,MAGvCR,EAAQA,QAAQ+B,cACnBK,QAAQC,IAAI,MACZrC,EAAQO,IAAI,QA7BV,gIA6BoC,CAAEC,KAAM,MAC9CR,EAAQO,IAAI,eAAe,EAAM,CAAEC,KAAM,OAG/C4B,QAAQC,IAAIrC,IAlBM,EAqBhBc,QAAU,WAERsB,QAAQC,IAAI,WACQ,EAAKvC,MAAjBE,QACAO,IAAI,eAAe,EAAO,CAAEC,KAAM,MAC1C,EAAKmC,cAvBL,EAAKA,aAHS,E,qDA+BhB,OACE,yBAAK9B,UAAU,OAEb,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAaC,QAASH,KAAKG,e,GAzCdE,IAAMC,WA+CVC,cAAawB,GCxDRE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,kBCTNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAACC,EAAA,EAAD,KACA,kBAAC,EAAD,QAGFC,SAASC,eAAe,SDoHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL1B,QAAQ0B,MAAMA,EAAMC,c","file":"static/js/main.c5c22270.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react'\nimport './Bingo.css'\n\nimport { instanceOf } from 'prop-types';\nimport { withCookies, Cookies } from 'react-cookie';\n\nclass Bingo extends React.Component {\n\n    static propTypes = {\n        cookies: instanceOf(Cookies).isRequired\n    };\n\n    constructor(props){\n        super(props);\n        this.state = {\n            select: false\n        }\n    }\n\n    SelectNumber = () =>\n    {\n        const { cookies } = this.props;\n        const { id, row } = this.props;\n        var board = JSON.parse(cookies.cookies.board);\n\n        board.selected[id][row] = !board.selected[id][row];\n        cookies.set('board', board, { path: '/' })\n       \n    }\n    \n    render() {\n        const { cookies } = this.props;\n        const { id, row } = this.props;\n        var board = JSON.parse(cookies.cookies.board);\n\n        if (this.props.free === true) {\n\n            return (\n            <div className='bg-light-green dib br3 pa3 ma2  bw2 shadow-5 fl w-100'>\n                FR\n            </div>\n            )\n        }\n        else if(board.selected[id][row]) {\n            return (\n            <div onClick={this.SelectNumber} className='bg-light-green dib br3 pa3 ma2  bw2 shadow-5 fl w-100'>\n              {this.props.num}\n            </div>\n            )\n        }\n        else  {\n            return (\n            <div onClick={this.SelectNumber} className='bg-light-white dib br3 pa3 ma2  bw2 shadow-5 fl w-100' >\n               {this.props.num}\n            </div>\n            )\n        }\n    }\n\n}\n\n\nexport default withCookies( Bingo)","import React from 'react'\nimport Bingo from './Bingo'\nimport { instanceOf } from 'prop-types';\nimport { withCookies, Cookies } from 'react-cookie';\n\nfunction getRandomInt(minn, maxx) {\n    var min = Math.ceil(minn);\n    var max = Math.floor(maxx);\n    return Math.floor(Math.random() * (max - min)) + min; //The maximum is exclusive and the minimum is inclusive\n}\n\n\n\nclass BingoColumn extends React.Component {\n    static propTypes = {\n        cookies: instanceOf(Cookies).isRequired\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.GenerateNumber();\n    }\n\n    UpdateCookie = (numbers, board, id) => {\n        const { cookies } = this.props;\n\n        board.numbers[id] = numbers;\n        board.selected[id] = [false, false, false, false, false];\n        board.initialized[id] = true;\n        cookies.set('board', board, { path: '/' })\n    }\n\n    shouldComponentUpdate (){\n        const { cookies } = this.props;\n        const { id } = this.props;\n        var board = JSON.parse(cookies.cookies.board);\n\n        if(!board.initialized[id])\n        {\n            this.GenerateNumber();\n        }\n\n        return true;\n    }\n\n    GenerateNumber = () => {\n        const { cookies } = this.props;\n        const { id } = this.props;\n        var board = JSON.parse(cookies.cookies.board);\n\n        if (!board.initialized[id]) {\n\n            var newnumbers = []\n            var i = 4\n\n            while (i > -1) {\n\n                var num = getRandomInt(this.props.min, this.props.max);\n                if (num === 0) {\n                    num = 1;\n                }\n                \n                if (!newnumbers.includes(num)) {\n                    newnumbers[i] = num;\n                    i = i - 1;\n                }\n\n            }\n\n            this.UpdateCookie(newnumbers, board, id);\n        }\n    }\n\n    render() {\n      \n        const { cookies } = this.props;\n        const { id } = this.props;\n        var board = JSON.parse(cookies.cookies.board);\n\n        console.log('rendercolumn')\n        console.log(board)\n        return (\n\n            <div className='fl w-20'>\n                <h1>{this.props.letter}</h1>\n                <Bingo id={id} row={'0'} num={board.numbers[id][0]} sel={board.selected[id][0]} free={false} />\n\n                <Bingo id={id} row={'1'} num={board.numbers[id][1]} sel={board.selected[id][1]} free={false} />\n                <Bingo id={id} row={'2'} num={board.numbers[id][2]} sel={board.selected[id][2]} free={this.props.free} />\n                <Bingo id={id} row={'3'} num={board.numbers[id][3]} sel={board.selected[id][3]} free={false} />\n                <Bingo id={id} row={'4'} num={board.numbers[id][4]} sel={board.selected[id][4]} free={false} />\n            </div>\n        )\n    }\n}\nexport default withCookies(BingoColumn)","\nimport React from 'react'\nimport './BingoList.css'\nimport BingoColumn from './BingoColumn'\n\n\nconst BingoList = () =>{\n\n    return (\n        <div>\n            <BingoColumn id={'0'} letter={'B'} min={'1'} max={'15'} free={false}/>\n            <BingoColumn id={'1'}  letter={'I'}  min={'16'} max={'30'} free={false} />\n            <BingoColumn id={'2'}  letter={'N'} min={'31'} max={'45'} free={true} />\n            <BingoColumn id={'3'}  letter={'G'}  min={'46'} max={'60'} free={false} />\n            <BingoColumn id={'4'}  letter={'O'}min={'61'} max={'75'} free={false} />\n    </div>\n    )\n\n}\n\nexport default BingoList","import React from 'react'\n\nimport { instanceOf } from 'prop-types';\nimport { withCookies, Cookies } from 'react-cookie';\nimport { render } from 'react-dom';\n\n\n\n\nclass ResetButton extends React.Component {\n\n    static propTypes = {\n        cookies: instanceOf(Cookies).isRequired\n    };\n\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <div >\n\n                <button className=\"bg-light-blue dib br3 pa3 ma2  bw2 shadow-5 grow\"\n                onClick={this.props.onClick}>New Game</button>\n            </div>\n        );\n    }\n}\n\nexport default withCookies(ResetButton);\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport BingoList from './components/BingoList';\nimport { useCookies } from 'react-cookie';\nimport ResetButton from './components/ResetButton';\n\nimport { instanceOf } from 'prop-types';\nimport { withCookies, Cookies } from 'react-cookie';\nimport { render } from 'react-dom';\n\nfunction GenerateBoard() {\n  return `\n { \n   \"numbers\": [[],[],[],[],[]],\n   \"selected\":  [[],[],[],[],[]],\n   \"initialized\": [false,false,false,false]\n}\n  `\n}\n\nclass  App extends React.Component {\n  \n  static propTypes = {\n    cookies: instanceOf(Cookies).isRequired\n};\n\nconstructor(props){\n    super(props);\n    \n    this.Initialize();\n}\n\n   Initialize = () => {\n    const { cookies } = this.props;\n    if (!cookies.cookies.initialized) {\n      cookies.set('initialized', false, { path: '/' })\n    }\n\n    if (!cookies.cookies.initialized) {\n      console.log('hi')\n      cookies.set('board', GenerateBoard(), { path: '/' })\n      cookies.set('initialized', true, { path: '/' })\n    }\n\nconsole.log(cookies)\n  }\n\n  onClick = () =>\n  {\n    console.log('onClick')\n    const { cookies } = this.props;\n    cookies.set('initialized', false, { path: '/' })\n    this.Initialize();\n\n  }\n\n  render(){\n  return (\n    <div className=\"App\">\n\n      <BingoList />\n      <ResetButton onClick={this.onClick}/>\n    </div>\n  );\n  }\n}\n\nexport default withCookies( App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons'\nimport { CookiesProvider } from 'react-cookie';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <CookiesProvider>\n    <App />\n    </CookiesProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}