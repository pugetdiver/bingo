{"version":3,"sources":["logo.svg","components/Bingo.js","components/BingoColumn.js","components/BingoList.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Bingo","SelectNumber","setState","state","select","DeSelectNumber","this","props","free","className","onClick","num","React","Component","getRandomInt","minn","maxx","min","Math","ceil","max","floor","random","BingoColumn","GenerateNumber","newnumbers","i","console","log","includes","numbers","length","letter","BingoList","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"6IAAAA,EAAOC,QAAU,IAA0B,kC,qLCyD5BC,G,wDApDX,aAAc,IAAD,8BACT,gBAMJC,aAAe,WAGX,EAAKC,UAAS,SAAAC,GACV,MAAO,CAACC,QAAQ,OAXX,EAebC,eAAiB,WAGb,EAAKH,UAAS,SAAAC,GACV,MAAO,CAACC,QAAQ,OAjBpB,EAAKD,MAAQ,CACTC,QAAQ,GAHH,E,qDAyBT,OAAwB,IAApBE,KAAKC,MAAMC,KAGX,yBAAKC,UAAU,yDAAf,MAKIH,KAAKH,MAAMC,OAEf,yBAAKM,QAASJ,KAAKD,eAAgBI,UAAU,yDAC1CH,KAAKC,MAAMI,KAMd,yBAAKD,QAASJ,KAAKL,aAAcQ,UAAU,yDACvCH,KAAKC,MAAMI,S,GA7CPC,IAAMC,YCC1B,SAASC,EAAaC,EAAMC,GACxB,IAAIC,EAAMC,KAAKC,KAAKJ,GAChBK,EAAMF,KAAKG,MAAML,GACrB,OAAOE,KAAKG,MAAMH,KAAKI,UAAYF,EAAMH,IAAQA,E,IA6DtCM,E,kDAxDX,aAAe,IAAD,8BACV,gBAQJC,eAAiB,WAKb,IAHA,IAAIC,EAAa,GACbC,EAAI,EAEDA,GAAK,GAAG,CAEX,IAAIf,EAAMG,EAAa,EAAKP,MAAMU,IAAK,EAAKV,MAAMa,KACvC,GAAPT,IACAA,EAAM,GAEVgB,QAAQC,IAAIjB,GACZgB,QAAQC,IAAIH,GACPA,EAAWI,SAASlB,KACrBc,EAAWC,GAAKf,EAChBe,GAAQ,GAKhB,EAAKxB,UAAS,SAAAC,GACV,MAAO,CAAE2B,QAASL,OA5BtB,EAAKtB,MAAQ,CACT2B,QAAS,IAHH,E,qDA0CV,OALkC,IAA9BxB,KAAKH,MAAM2B,QAAQC,QACnBzB,KAAKkB,iBAGTG,QAAQC,IAAItB,KAAKH,MAAM2B,SAGnB,yBAAKrB,UAAU,WACX,4BAAKH,KAAKC,MAAMyB,QAChB,kBAAC,EAAD,CAAOrB,IAAKL,KAAKH,MAAM2B,QAAQ,GAAItB,MAAM,IAEzC,kBAAC,EAAD,CAAOG,IAAKL,KAAKH,MAAM2B,QAAQ,GAAItB,MAAM,IACzC,kBAAC,EAAD,CAAOG,IAAKL,KAAKH,MAAM2B,QAAQ,GAAItB,KAAMF,KAAKC,MAAMC,OACpD,kBAAC,EAAD,CAAOG,IAAKL,KAAKH,MAAM2B,QAAQ,GAAItB,MAAM,IACzC,kBAAC,EAAD,CAAOG,IAAKL,KAAKH,MAAM2B,QAAQ,GAAItB,MAAM,S,GArD/BI,IAAMC,WCUjBoB,EAdG,WAEd,OACI,6BACI,kBAAC,EAAD,CAAcD,OAAQ,IAAKf,IAAK,IAAKG,IAAK,KAAMZ,MAAM,IACtD,kBAAC,EAAD,CAAcwB,OAAQ,IAAMf,IAAK,KAAMG,IAAK,KAAMZ,MAAM,IACxD,kBAAC,EAAD,CAAcwB,OAAQ,IAAKf,IAAK,KAAMG,IAAK,KAAMZ,MAAM,IACvD,kBAAC,EAAD,CAAcwB,OAAQ,IAAMf,IAAK,KAAMG,IAAK,KAAMZ,MAAM,IACxD,kBAAC,EAAD,CAAcwB,OAAQ,IAAIf,IAAK,KAAMG,IAAK,KAAMZ,MAAM,MCAnD0B,MATf,WACE,OACE,yBAAKzB,UAAU,OAEb,kBAAC,EAAD,QCGc0B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,MCXNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLzB,QAAQyB,MAAMA,EAAMC,c","file":"static/js/main.1d6540a5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react'\nimport './Bingo.css'\n\nclass Bingo extends React.Component {\n\n    constructor(){\n        super();\n        this.state = {\n            select: false\n        }\n    }\n\n    SelectNumber = () =>\n    {\n     //   console.log('select');\n        this.setState(state => {\n            return {select: true}\n        });\n    }\n\n    DeSelectNumber = () =>\n    {\n      //  console.log('deselect')\n        this.setState(state => {\n            return {select: false}\n        });\n    }\n\n    render() {\n\n        if (this.props.free === true) {\n\n            return (\n            <div className='bg-light-green dib br3 pa3 ma2  bw2 shadow-5 fl w-100'>\n                FR\n            </div>\n            )\n        }\n        else if(this.state.select) {\n            return (\n            <div onClick={this.DeSelectNumber} className='bg-light-green dib br3 pa3 ma2  bw2 shadow-5 fl w-100'>\n              {this.props.num}\n            </div>\n            )\n        }\n        else  {\n            return (\n            <div onClick={this.SelectNumber} className='bg-light-white dib br3 pa3 ma2  bw2 shadow-5 fl w-100' >\n               {this.props.num}\n            </div>\n            )\n        }\n    }\n\n}\n\n\nexport default Bingo","import React from 'react'\nimport Bingo from './Bingo'\n\n\nfunction getRandomInt(minn, maxx) {\n    var min = Math.ceil(minn);\n    var max = Math.floor(maxx);\n    return Math.floor(Math.random() * (max - min)) + min; //The maximum is exclusive and the minimum is inclusive\n}\n\nclass BingoColumn extends React.Component {\n\n    constructor() {\n        super();\n        this.state = {\n            numbers: []\n        }\n    }\n\n\n\n    GenerateNumber = () => {\n\n        var newnumbers = []\n        var i = 4\n\n        while (i > -1) {\n\n            var num = getRandomInt(this.props.min, this.props.max);\n            if (num == 0) {\n                num = 1;\n            }\n            console.log(num);\n            console.log(newnumbers)\n            if (!newnumbers.includes(num)) {\n                newnumbers[i] = num;\n                i = i - 1;\n            }\n\n        }\n\n        this.setState(state => {\n            return { numbers: newnumbers }\n        });\n    }\n\n\n\n    render() {\n        if (this.state.numbers.length === 0) {\n            this.GenerateNumber();\n        }\n\n        console.log(this.state.numbers)\n        return (\n\n            <div className='fl w-20'>\n                <h1>{this.props.letter}</h1>\n                <Bingo num={this.state.numbers[0]} free={false} />\n\n                <Bingo num={this.state.numbers[1]} free={false} />\n                <Bingo num={this.state.numbers[2]} free={this.props.free} />\n                <Bingo num={this.state.numbers[3]} free={false} />\n                <Bingo num={this.state.numbers[4]} free={false} />\n            </div>\n        )\n    }\n}\nexport default BingoColumn","\nimport React from 'react'\nimport './BingoList.css'\nimport BingoColumn from './BingoColumn'\n\n\nconst BingoList = () =>{\n\n    return (\n        <div>\n            <BingoColumn  letter={'B'} min={'1'} max={'15'} free={false}/>\n            <BingoColumn  letter={'I'}  min={'16'} max={'30'} free={false} />\n            <BingoColumn  letter={'N'} min={'31'} max={'45'} free={true} />\n            <BingoColumn  letter={'G'}  min={'46'} max={'60'} free={false} />\n            <BingoColumn  letter={'O'}min={'61'} max={'75'} free={false} />\n    </div>\n    )\n\n}\n\nexport default BingoList","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport BingoList from './components/BingoList';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      \n      <BingoList/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}